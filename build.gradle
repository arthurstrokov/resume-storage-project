plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id 'com.bmuschko.docker-spring-boot-application' version '7.3.0'  // Docker plugin
}

java {
    withJavadocJar()
    withSourcesJar()
}

group = 'com.gmail.arthurstrokov'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springCloudVersion', "2021.0.3-SNAPSHOT")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'

    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.testcontainers:postgresql:1.17.3'
    testImplementation "org.testcontainers:junit-jupiter:1.17.3"

    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.6'
    implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.1.13'
    implementation group: 'org.apache.maven.plugins', name: 'maven-javadoc-plugin', version: '3.2.0'
    // TODO What is going on?

    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

    implementation 'net.logstash.logback:logstash-logback-encoder:7.2'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

//    implementation 'io.github.arthurstrokov:aop-library:0.0.1'
    //	compileOnly(fileTree(dir: 'C:/Users/arthu/.m2/repository/io/github/arthurstrokov/aop-library/0.0.1', include: '*.jar'))
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

//repositories {
//    maven {
//        url "https://maven.pkg.jetbrains.space/avistate/p/aop-library/aop"
//        credentials {
//            username = spaceUsername
//            password = spacePassword
//        }
//    }
//}

tasks.named('test') {
    useJUnitPlatform()
}

docker { // For docker plugin
    springBootApplication {
        baseImage = 'openjdk:11'
        ports = [8080]
        images = ['arthurstrokov/resume-storage-project:latest']
        jvmArgs = ['-Xmx2048m']
    }
}

import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

task removeContainer(type: DockerRemoveContainer) {
    force = true
    containerId = 'resume-storage-project'
    onError(ex -> print ex.getMessage())
}

task removeImage(type: DockerRemoveImage) {
    dependsOn removeContainer
    force = true
    targetImageId('arthurstrokov/resume-storage-project')
    onError(ex -> print ex.getMessage())
}

task("recreate") {
    group 'docker'
    dependsOn dockerBuildImage
}
